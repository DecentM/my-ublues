name: isos

on:
  schedule:
    - cron:
        "00 07 * * *" # build at 06:00 UTC every day
        # (20 minutes after last ublue images start building)

  pull_request:
  workflow_dispatch: # allow manually triggering builds

jobs:
  bluebuild:
    name: Build Custom Image

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      fail-fast: false # stop GH from cancelling all matrix builds if one fails

      matrix:
        include:
          - recipe: workstation
            arch: x86_64
            variant: fedora-release-kinoite-40-38.noarch
            version: 40
            maximize_build_space: true

          - recipe: workstation-nvidia
            arch: x86_64
            variant: fedora-release-kinoite-40-38.noarch
            version: 40
            maximize_build_space: true

          - recipe: laptop
            arch: x86_64
            variant: fedora-release-kinoite-40-38.noarch
            version: 40
            maximize_build_space: true

          - recipe: k8s-node
            arch: x86_64
            variant: fedora-release-coreos-40-38.noarch
            version: 40
            maximize_build_space: false

          - recipe: k8s-node-nvidia
            arch: x86_64
            variant: fedora-release-coreos-40-38.noarch
            version: 40
            maximize_build_space: false

          # - recipe: k8s-node-legacy-nvidia
          #   arch: x86_64
          #   variant: fedora-release-coreos-40-38.noarch
          #   version: 40

          - recipe: xps-laptop
            arch: x86_64
            variant: fedora-release-bluefin-40-38.noarch
            version: 40
            maximize_build_space: false

    steps:
      - name: Build ISO
        uses: jasonn3/build-container-installer@main
        id: build
        with:
          arch: ${{ matrix.arch }}
          enrollment_password: ${{ secrets.ENROLLMENT_PASSWORD }}
          image_name: ${{ matrix.recipe }}
          image_repo: ghcr.io/decentm
          image_tag: latest
          version: ${{ matrix.version }}
          iso_name: ${{ matrix.recipe }}-latest-${{ matrix.arch }}.iso
          variant: ${{ matrix.variant }}
          web_ui: false

      # This example is for uploading your ISO as a Github artifact. You can do something similar using any cloud storage, so long as you copy the output
      - name: Upload ISO as artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.iso_name }}
          path: |
            ${{ steps.build.outputs.iso_path }}
            ${{ steps.build.outputs.iso_path }}-CHECKSUM
          if-no-files-found: error
          retention-days: 1
          compression-level: 9
