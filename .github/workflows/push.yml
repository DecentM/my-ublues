name: build-and-publish

on:
  push:
    branches:
      - main

  schedule:
    - cron:
        "00 06 * * TUE" # build at 06:00 UTC on Tuesdays
        # (20 minutes after last ublue images start building)

jobs:
  base-changes:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: read

    outputs:
      recipes: ${{ steps.filter.outputs.changes }}

    steps:
      - uses: actions/checkout@v4
        with:
          # This may save additional git fetch roundtrip if
          # merge-base is found within latest 20 commits
          fetch-depth: 20

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            _aurora-nvidia:
              - recipes/_aurora-nvidia.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            _aurora:
              - recipes/_aurora.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            _bazzite-deck:
              - recipes/bazzite-deck.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            _server-zfs-nvidia:
              - recipes/_server-zfs-nvidia.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            _server:
              - recipes/_server.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*

  base-bluebuild:
    name: Build Bases

    runs-on: ubuntu-latest

    needs:
      - base-changes

    if: ${{ needs.base-changes.outputs.recipes != '[]' && needs.base-changes.outputs.recipes != '' }}

    strategy:
      fail-fast: false

      matrix:
        recipe: ${{ fromJSON(needs.base-changes.outputs.recipes) }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Build Custom Image
        uses: blue-build/github-action@v1.8.1
        with:
          recipe: ${{ matrix.recipe }}.yml
          cosign_private_key: ${{ secrets.SIGNING_SECRET }}
          registry_token: ${{ github.token }}
          maximize_build_space: false
          rechunk: false

  isos:
    name: Build ISOs from images

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    needs:
      - base-bluebuild

    steps:
      - name: Build ISO
        uses: jasonn3/build-container-installer@main
        id: build
        with:
          arch: x86_64
          enrollment_password: ${{ secrets.ENROLLMENT_PASSWORD }}
          image_name: base-server
          image_repo: ghcr.io/decentm
          image_tag: latest
          version: 42
          iso_name: base-server-latest-x86_64.iso
          variant: fedora-release-coreos-42-26.noarch
          web_ui: false

      - name: Upload ISO as artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.iso_name }}
          path: |
            ${{ steps.build.outputs.iso_path }}
            ${{ steps.build.outputs.iso_path }}-CHECKSUM
          if-no-files-found: error
          retention-days: 7
          compression-level: 9

  image-changes:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: read

    outputs:
      recipes: ${{ steps.filter.outputs.changes }}

    steps:
      - uses: actions/checkout@v4
        with:
          # This may save additional git fetch roundtrip if
          # merge-base is found within latest 20 commits
          fetch-depth: 20

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            bazzite-deck:
              - recipes/bazzite-deck.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            home-theatre:
              - recipes/home-theatre.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            k8s-node-zfs-nvidia:
              - recipes/k8s-node-zfs-nvidia.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            k8s-node:
              - recipes/k8s-node.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            laptop:
              - recipes/laptop.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            server:
              - recipes/server.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            workstation-nvidia:
              - recipes/workstation-nvidia.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*
            workstation:
              - recipes/workstation.yml
              - recipes/**/*
              - files/**/*
              - modules/**/*

  image-bluebuild:
    name: Build Images

    runs-on: ubuntu-latest

    needs:
      - image-changes
      - base-bluebuild

    if: ${{ needs.image-changes.outputs.recipes != '[]' && needs.image-changes.outputs.recipes != '' }}

    strategy:
      fail-fast: false

      matrix:
        recipe: ${{ fromJSON(needs.image-changes.outputs.recipes) }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Build Custom Image
        uses: blue-build/github-action@v1.8.1
        with:
          recipe: ${{ matrix.recipe }}.yml
          cosign_private_key: ${{ secrets.SIGNING_SECRET }}
          registry_token: ${{ github.token }}
          maximize_build_space: true
          rechunk: true